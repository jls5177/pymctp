[build-system]
requires = ["hatchling", "hatch-regex-commit"]
build-backend = "hatchling.build"

[project]
name = "pymctp"
dynamic = ["version"]
description = "PyMCTP is a tool to forge/decode DMTF MCTP communication packets"
readme = "README.md"
requires-python = ">=3.8"
license = { file = "LICENSE" }
keywords = []
authors = [
  { name = "Justin Simon", email = "justin@simonctl.com" }
]
classifiers = [
  "Development Status :: 4 - Beta",
  "Intended Audience :: Developers",
  "Programming Language :: Python",
  "Programming Language :: Python :: 3.8",
  "Programming Language :: Python :: 3.9",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3.12",
  "Programming Language :: Python :: Implementation :: CPython",
  "Programming Language :: Python :: Implementation :: PyPy",
  "Topic :: Software Development :: Libraries",
  "Topic :: Utilities",
]
dependencies = [
    "scapy>=2.5.0",
    "crc8>=0.1.0",
    "pyaardvark>=0.7.1",
    "mashumaro>=3.5"
]

[project.urls]
Documentation = "https://github.com/jls5177/mctp-emu#readme"
Issues = "https://github.com/jls5177/mctp-emu/issues"
Source = "https://github.com/jls5177/mctp-emu"

[tool.hatch.metadata]
allow-direct-references = true

[tool.hatch.version]
source = "regex_commit"
path = "src/pymctp/__about__.py"
#commit_extra_args = ["-e"]

[tool.hatch.build.targets.sdist]
exclude = [
    ".history",
    ".ruff_cache",
    ".venv",
    ".vscode",
    "dist",
]

[tool.hatch.envs.types]
extra-dependencies = [
  "mypy>=1.0.0",
]
[tool.hatch.envs.types.scripts]
check = "mypy --install-types --non-interactive {args:src/pymctp tests}"

[tool.hatch.envs.default]
type = "virtual"
path = ".venv"

# Ruff
[tool.ruff]
target-version = "py310"
line-length = 120
exclude = ["./.history", "./.venv"]

# Coverage
[tool.coverage.run]
source_pkgs = ["pymctp", "tests"]
branch = true
parallel = true
omit = [
  "src/pymctp/__about__.py",
]

[tool.coverage.paths]
pymctp = ["src/pymctp", "*/pymctp/src/pymctp"]
tests = ["tests", "*/pymctp/tests"]

[tool.coverage.report]
exclude_lines = [
  "no cov",
  "if __name__ == .__main__.:",
  "if TYPE_CHECKING:",
]
